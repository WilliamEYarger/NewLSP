2021 03 24 committed 2021 03 24 0618
	1.	*Add call to SaveFiles() whenever the SubjectTree changes and 
		remove the SaveFiles button
Commit message
Removed the SaveFiles button from the Subject Tree form and added a call to SaveFiles() to
all radio buttons that alter the subject tree

2021 03 23 Committed 202103 03 23 1255
	1.	*There is an error 
		System.IO.DirectoryNotFoundException: 'Could not find a part of the path 
		The problem is that the program is no longer creating a QA Files folder when it creates a new subject
	2.	*There is an error in writting to the item count binary file
	3.	*There was an error in writing to the NodeDataStrings.txt file
	4.	*There was a error in replacing '~' with "\r\n" in the question and answer
Committ Message
Corrected errors 1) in creating the QAFiles and QAResults folders; 2) In updating the binary file that
holds the current item count; 3) an error in writing to the NodeDataStrings.txt file and
4) an error in replacing '~' with "\r\n" in the question and answer



2021 03 21 committed 2021 03 23
	1.	*Get Rid of unnecessary messages
	2.	*There is an error in the leading spaces for the moved node
	3.	*Create an Instructions UserControl to  give How-to messages in a text box as selected from a menu
		a.	*Add a new UserControl, "Instructions" to project
		b.	*Adjust its size
		c.	*Create a vertical stack panel
		d.	*Add a menu
		e.	*And a text box
	4.	*Add code to add this user control to the main window
	5.	*Create a static helper file, InstructionsStaticMembers,  for the instructions user control
		a.	*create a property to hold the path to the instructions folder
		b.	*In the Home user control create a button to create or select the instructions folder
	6.	*There is an error in that the TestReviewStaticMembers.NumberOfWrongAnswers is not correct
		and the results string is not writing to the file

Commit Message:
	1) Creates an Insturctions page and instructions text files; 2) Corrected errors in calculating and
	writting the results to the Results file


2021 03 20 Committed 2021 03 21 0800
	1.	Add code to move a branch
		a.	*In SubjectTree.xaml create new radio button rbMoveNode "Node Selected to Move"
		b.	Identify the new parent
				o	*Show message to select the new parent
				o	*set bool NodeIsMoving to true
				o	Create a MouseRightButtonUp method to select the new parent
				o	*when a new node is selected and NodeIsMoving to true, designate that node as the NewParentNode
				o	*Call the MoveNode() method
				o	*Get its NLN and NOC
				o	*create new new NLN for the node that was moved
				o	*Create a method, ChangeMovedNodesNLN, to change to NLN of the moved node and all of its children
				o	*Adjust the new parent't child indicator and number of children and save the revised new parent
	Commit Message
	Creates a new radiobutton to select a node to move; creates a list view double click method to select the new paren;
	creates the code for renamins the node to move and all of its children; updates the new parent's number of children
	and its child indicator if necessare and saves the new parent and all of the moved nodes with their revised 
	node level names



2021 03 19
	1.	*Correct an error with the mp3 file
	2.	In SubjectTree code the delete node radio button
	3.	Reconnect the SubjectStaticMembers.SaveFiles(); by creating btnSaveFiles
	
	Commit Message:
	Corrected an error is opening a mp3 file, created code to delete a node and  
	Reconnect the SubjectStaticMembers.SaveFiles(); by creating btnSaveFiles

2021 03 17 Committed and pushed
	1.	*Reset all the media bools and string at the start of AnswerQuestions
	2.	*Both Score correct and score wrong do not call AnswerQuestions or reset the scoring buttons
	3.	*TestReviewStaticMembers.CurrentQuestionNumberString is not set
		*a.	Both xaml cs and static have methods called AnswerQuestions
			1)	xaml.cs private void AnswerQuestions(char T)
			2) static public static void AnswerQuestions(string thisKey)
			*Change the static's name to SetCurrentQAValues
	5.	The logic for determining whether the QANoumvers String in never called, place it in the 
		AnsswerQuestions method
	4.	QAnumber string does not have the first value removed and when added the ^ should follow, not
		preceed the numberstr


2021 03 16
	1.	*xaml.cs shows message to pick Review or Test
	2.	*Set the inabled state of all buttons to false
	3.	*Mainwindow.xaml.cs Test Click calls IntializeData to download file, create dictionary and 
		create CurrentQuestionNumberString from the count of items in the dictionary
		a.	*Create and initialize TestReviewStatic  properties
			1)	*download file,
			2)	*create dictionary
			3)	*create CurrentQuestionNumberString
			4)	*create property int NumberOfWrongAnswers = 0
			5)	*create property string DelimitedWrongAnswersStr
	3.	*Both Review and Test menu items call TestReview.xaml.cs.AnswerQuestions (Q)
		and both set the TestReview.xaml.cs private field, IsTest, appropriately
	4.	*AnswerQuestions if Q asks Static for next question, if blank shows Message
		telling the user to Select File-> Save, or File->Clear
	5.	*In TestReviewStatic Create boolean fields ThereIsAnImageFile and ThereIsASoundFile
	6.	*AnswerQuestions sets appropriate Image and sound booleans and calls buttons reset and buttons display
	7.	*AnswerQuestions if T= Q enables the btnShowCorrect
	8.	*Create public properties of  string JpgURl and string Mp3Url in Static
	9.	*After setting static's there is an image and there is a sound bools and sets the URls where appropriate
	10.	*btnShowCorrect_Click
		a.	*Loads the correct answer into the tbxCorrectAnswer
		b.	*Calls AnswerQuestions(A)
		c.	*Enables the Score correct and socre wrong buttons
		d.	*Disables the ShowCorrectAnswe button
	11.	*Code the score correct button set CurrentQuestionNumberString to ""
	12.	*code the score wrong button add the   to CurrentQuestionNumberString
	13.	*Change the Name of File to results
	14.	On save results 
		a.	Check to see if the Directory QAResults exists and if not create it
		b.	Write results string to QAResusts ID.txt file: DateTimeNow %correct delimited wrong answers
	15.	Return all media urls and booleans to base after question and after scoring


2021 03 15
	1.	Tasks:
		a.	In TestReview.xaml.cs
			1)	Crete a private Method to AnswerQuestions(char T), 
				where T is a Q or A indicating that a
				question and any attendant media files 
				should be loaded, or A vise versa for an Answer

2021 03 14 0822 
	1.	New: Create code to open a jpg or mp3 file when the question
		is entered if there are urls
		a.	Save the key to each qa pair so if the answer is incorrect and it is
			a review, it can be appended to the end of the QANumberStirng

	7.	Code the see correct answer button
	8.	Code the score correct button. At this time I will nod be saving any test results
		so the only option is to remove the current QANuber from the QANUmbersString
	10.	Code the score wrong button. When ThisIsATest is false remove the first QANumber string
		and place it at the end of the QANUmbersString
	9.	Set the code for the btnOpenImage Button;
		a.	when a QA string has a question associated image
			1)	Set the button's IsEnabled to true
			2)	Set the foregroung color to red
		b.	When the user clicks the OpenImageFile button insert 
			the following into its Click event
			System.Diagnostics.Process.Start(QADataModelObject.QuestionJpgUrl);
		c.	Reset the foreground color to black and set the IsEnabled to false
		d.	Do t he same for when the answer has an associated jpg image
	10.	Set the code for the btnOpenMp3 button as above 



2021 03 11 0734 Committed 2021 03 14 0820
	1.	*Copy AnswerQuestionView from LearningStudyProject to TestReview User control
	2.	*Make sure that a DataNode has been chosen before opening the TestReview user control
	3.	*Correct removing \r\n from question and answer
	4.	*Correct the assigning jpg and mp3 file urls to a QA pair
	5.	Tasks to be performed when opening the TextReview user control
		a.	*Check to see that the appropriate QA File exists
		b.	*Upload it to a Dictionary(string,string) QADictionary, where the key is 
			the sequential qa number converted to a string
		c.	*Create a ^ delimited string of sequential numbers, QANUmbersString, whose largest
			value is the Count of items in the QADictionary
		d.	*Create a private boolean variable, ThisIsATest and
			create a working QANUmbersString so the same dictionary can be used  for
			both a review and a test
	6.	*When either the test or review menu item is clicked call the AnswerQuestions() method
		Code the Review menu item and set ThisIsATest to false
	7.	*In the AnswerQuestions method, if the length of the QANumberString is not 0
		set all the QADataModel strings and return
At this point save a copy of all altered files and commit and sync

	7.	Code the see correct answer button
	8.	Code the score correct button. At this time I will nod be saving any test results
		so the only option is to remove the current QANuber from the QANUmbersString
	10.	Code the score wrong button. When ThisIsATest is false remove the first QANumber string
		and place it at the end of the QANUmbersString
	9.	Set the code for the btnOpenImage Button;
		a.	when a QA string has a question associated image
			1)	Set the button's IsEnabled to true
			2)	Set the foregroung color to red
		b.	When the user clicks the OpenImageFile button insert 
			the following into its Click event
			System.Diagnostics.Process.Start(QADataModelObject.QuestionJpgUrl);
		c.	Reset the foreground color to black and set the IsEnabled to false
		d.	Do the same for when the answer has an associated jpg image
	10.	Set the code for the btnOpenMp3 button as above 




2021 03 09
	1.	Create an OpenFileDialog for the JPG Files


2021 03 08 Committed and pushed to master and GIT
	Copy the QACreateEditView  from the Learning study project
	1.	*Make sure the user cannot open this window until a data node has been selected
	2.	*Show Message telling the user to select the Edit Mode first
	3.	*Copy the code from the QACreateEditView.xaml.cs 
	4.	Create a new DataModel to hold the Question and Answer data
		During program execution deal with the collection of QA properties as an
		object and only convert them to a delimited string on loading or 
		unloading a QA data text file
		a.	Name = QADataModel
		b.	Full properties
			1)	*int QANumber
			2)	*string Question
			3)	*string Answer
			4)	*string QuestionJpgUrl
			5)	*String QuestionMp3Url
			6)	*string AnswerJpgUrl
			7)	*string AnswerMp3Url
		c.	*Create a default constructor and one which takes an int as a parameter
		d.	*Create a Dictionary<string,QADataModel> QADictionary is which the key is the QANumber.ToString() 
			and the value is the QADAtaModel object associated with that key
			1)	*Create a field to create this dictionary
			2)	*Create a method to add to the dictionary
			3)	*Create a method to retrieve a value when a key int.string is supplied.
				The value is returned as a QADataModel object
		e.	*Create a property to hold the current QAQuestionNumber


2021 03 07 0541 dev branch committed to master 2021 03 07 0934
	1.	Move contnets of StudyLearningProject to SubjectTree User control
	2.	Copy code for opening the subject directory
		a.	*Install Microsoft.WindowsAPICodePack.Dialogs NuGet package
		b.	*Copy btnOpenSubjectFolder_Click code
	3.	*Create StaticHelperClasses folder
		a.	*Copy StringHelper Class
	4.	Copy SubjectStaticMembers
	5.	*Create DataModels folder
		a. *Add SubjectNodes
	6.	*Make sure the SubjectTree will not open unless a subject node has been selected
	7.	*Add a button to the subject tree that will display the DisplayList in the list view
	8.	*Enable the ExpandCollapse radio button
	9.	*Enable the add new child radio button
	10.	*Enable the Change TitleText radio button




==================================================================================================

2021 03 06 Initial development of the NewLSP  (New LearningStudyProject)
	The overall design is based on the Change embedded UserControls with a Menu bar in the WPF HowTo Table.docx
	#ChangeUserControlsWithMenuBar

	Initially there will be  # User controls
	1.	*Home: This will be the only control visible at startup and will contain:
		a.	A button to Create or Select the desired Subject folder
	2.	SubjectTree: This will contain all of the code in LearningStudyProject's UserControl 
		x:Class="LearningStudyProject.Views.SubjectTreeView", except for 
		<Button x:Name="FileOpen" Content="Open Subject Folder"
	3.	Review/Answer Questions: this will contain all the code in the LearningSu=tudyProject's
		UserControl x:Class="LearningStudyProject.Views.AnswerQuestionsView"
	4.	See TestResults: This will allow the usere to view recent and cumulative test results
		No Code except for a test MessageBox at present
	5.	Record Study Data: This will allow the user to seek and record various types of data from 
		the Web and elsewhere
		No Code except for a test MessageBox at present

	Set the MainWindow's size and startup location
		
        Height="800" Width="1200"        
        WindowStartupLocation="CenterScreen">
	Create source control and commit and send master to dev